/*
Cosmic Dolphin

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cosmicdolphinapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBookmarkResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBookmarkResponse{}

// CreateBookmarkResponse struct for CreateBookmarkResponse
type CreateBookmarkResponse struct {
	Bookmark Bookmark `json:"bookmark"`
	Message string `json:"message"`
}

type _CreateBookmarkResponse CreateBookmarkResponse

// NewCreateBookmarkResponse instantiates a new CreateBookmarkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBookmarkResponse(bookmark Bookmark, message string) *CreateBookmarkResponse {
	this := CreateBookmarkResponse{}
	this.Bookmark = bookmark
	this.Message = message
	return &this
}

// NewCreateBookmarkResponseWithDefaults instantiates a new CreateBookmarkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBookmarkResponseWithDefaults() *CreateBookmarkResponse {
	this := CreateBookmarkResponse{}
	return &this
}

// GetBookmark returns the Bookmark field value
func (o *CreateBookmarkResponse) GetBookmark() Bookmark {
	if o == nil {
		var ret Bookmark
		return ret
	}

	return o.Bookmark
}

// GetBookmarkOk returns a tuple with the Bookmark field value
// and a boolean to check if the value has been set.
func (o *CreateBookmarkResponse) GetBookmarkOk() (*Bookmark, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bookmark, true
}

// SetBookmark sets field value
func (o *CreateBookmarkResponse) SetBookmark(v Bookmark) {
	o.Bookmark = v
}

// GetMessage returns the Message field value
func (o *CreateBookmarkResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *CreateBookmarkResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *CreateBookmarkResponse) SetMessage(v string) {
	o.Message = v
}

func (o CreateBookmarkResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBookmarkResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bookmark"] = o.Bookmark
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *CreateBookmarkResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bookmark",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBookmarkResponse := _CreateBookmarkResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBookmarkResponse)

	if err != nil {
		return err
	}

	*o = CreateBookmarkResponse(varCreateBookmarkResponse)

	return err
}

type NullableCreateBookmarkResponse struct {
	value *CreateBookmarkResponse
	isSet bool
}

func (v NullableCreateBookmarkResponse) Get() *CreateBookmarkResponse {
	return v.value
}

func (v *NullableCreateBookmarkResponse) Set(val *CreateBookmarkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBookmarkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBookmarkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBookmarkResponse(val *CreateBookmarkResponse) *NullableCreateBookmarkResponse {
	return &NullableCreateBookmarkResponse{value: val, isSet: true}
}

func (v NullableCreateBookmarkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBookmarkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


