/*
Cosmic Dolphin

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cosmicdolphinapi

import (
	"encoding/json"
)

// checks if the OpenGraph type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenGraph{}

// OpenGraph struct for OpenGraph
type OpenGraph struct {
	Title *string `json:"title,omitempty"`
	Type *string `json:"type,omitempty"`
	Image *string `json:"image,omitempty"`
	Url *string `json:"url,omitempty"`
	ImageAlt *string `json:"imageAlt,omitempty"`
	ArticlePublishedTime *string `json:"articlePublishedTime,omitempty"`
	ArticleModifiedTime *string `json:"articleModifiedTime,omitempty"`
}

// NewOpenGraph instantiates a new OpenGraph object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenGraph() *OpenGraph {
	this := OpenGraph{}
	return &this
}

// NewOpenGraphWithDefaults instantiates a new OpenGraph object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenGraphWithDefaults() *OpenGraph {
	this := OpenGraph{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *OpenGraph) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *OpenGraph) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *OpenGraph) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OpenGraph) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OpenGraph) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OpenGraph) SetType(v string) {
	o.Type = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *OpenGraph) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *OpenGraph) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *OpenGraph) SetImage(v string) {
	o.Image = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OpenGraph) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OpenGraph) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OpenGraph) SetUrl(v string) {
	o.Url = &v
}

// GetImageAlt returns the ImageAlt field value if set, zero value otherwise.
func (o *OpenGraph) GetImageAlt() string {
	if o == nil || IsNil(o.ImageAlt) {
		var ret string
		return ret
	}
	return *o.ImageAlt
}

// GetImageAltOk returns a tuple with the ImageAlt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetImageAltOk() (*string, bool) {
	if o == nil || IsNil(o.ImageAlt) {
		return nil, false
	}
	return o.ImageAlt, true
}

// HasImageAlt returns a boolean if a field has been set.
func (o *OpenGraph) HasImageAlt() bool {
	if o != nil && !IsNil(o.ImageAlt) {
		return true
	}

	return false
}

// SetImageAlt gets a reference to the given string and assigns it to the ImageAlt field.
func (o *OpenGraph) SetImageAlt(v string) {
	o.ImageAlt = &v
}

// GetArticlePublishedTime returns the ArticlePublishedTime field value if set, zero value otherwise.
func (o *OpenGraph) GetArticlePublishedTime() string {
	if o == nil || IsNil(o.ArticlePublishedTime) {
		var ret string
		return ret
	}
	return *o.ArticlePublishedTime
}

// GetArticlePublishedTimeOk returns a tuple with the ArticlePublishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetArticlePublishedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ArticlePublishedTime) {
		return nil, false
	}
	return o.ArticlePublishedTime, true
}

// HasArticlePublishedTime returns a boolean if a field has been set.
func (o *OpenGraph) HasArticlePublishedTime() bool {
	if o != nil && !IsNil(o.ArticlePublishedTime) {
		return true
	}

	return false
}

// SetArticlePublishedTime gets a reference to the given string and assigns it to the ArticlePublishedTime field.
func (o *OpenGraph) SetArticlePublishedTime(v string) {
	o.ArticlePublishedTime = &v
}

// GetArticleModifiedTime returns the ArticleModifiedTime field value if set, zero value otherwise.
func (o *OpenGraph) GetArticleModifiedTime() string {
	if o == nil || IsNil(o.ArticleModifiedTime) {
		var ret string
		return ret
	}
	return *o.ArticleModifiedTime
}

// GetArticleModifiedTimeOk returns a tuple with the ArticleModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenGraph) GetArticleModifiedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleModifiedTime) {
		return nil, false
	}
	return o.ArticleModifiedTime, true
}

// HasArticleModifiedTime returns a boolean if a field has been set.
func (o *OpenGraph) HasArticleModifiedTime() bool {
	if o != nil && !IsNil(o.ArticleModifiedTime) {
		return true
	}

	return false
}

// SetArticleModifiedTime gets a reference to the given string and assigns it to the ArticleModifiedTime field.
func (o *OpenGraph) SetArticleModifiedTime(v string) {
	o.ArticleModifiedTime = &v
}

func (o OpenGraph) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenGraph) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.ImageAlt) {
		toSerialize["imageAlt"] = o.ImageAlt
	}
	if !IsNil(o.ArticlePublishedTime) {
		toSerialize["articlePublishedTime"] = o.ArticlePublishedTime
	}
	if !IsNil(o.ArticleModifiedTime) {
		toSerialize["articleModifiedTime"] = o.ArticleModifiedTime
	}
	return toSerialize, nil
}

type NullableOpenGraph struct {
	value *OpenGraph
	isSet bool
}

func (v NullableOpenGraph) Get() *OpenGraph {
	return v.value
}

func (v *NullableOpenGraph) Set(val *OpenGraph) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenGraph) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenGraph) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenGraph(val *OpenGraph) *NullableOpenGraph {
	return &NullableOpenGraph{value: val, isSet: true}
}

func (v NullableOpenGraph) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenGraph) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


