/*
Cosmic Dolphin

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cosmicdolphinapi

import (
	"encoding/json"
)

// checks if the BookmarkMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookmarkMetadata{}

// BookmarkMetadata struct for BookmarkMetadata
type BookmarkMetadata struct {
	OpenGraph *OpenGraphMetadata `json:"openGraph,omitempty"`
	WordCount *int32 `json:"wordCount,omitempty"`
	ReadingTime *int32 `json:"readingTime,omitempty"`
}

// NewBookmarkMetadata instantiates a new BookmarkMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookmarkMetadata() *BookmarkMetadata {
	this := BookmarkMetadata{}
	return &this
}

// NewBookmarkMetadataWithDefaults instantiates a new BookmarkMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookmarkMetadataWithDefaults() *BookmarkMetadata {
	this := BookmarkMetadata{}
	return &this
}

// GetOpenGraph returns the OpenGraph field value if set, zero value otherwise.
func (o *BookmarkMetadata) GetOpenGraph() OpenGraphMetadata {
	if o == nil || IsNil(o.OpenGraph) {
		var ret OpenGraphMetadata
		return ret
	}
	return *o.OpenGraph
}

// GetOpenGraphOk returns a tuple with the OpenGraph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookmarkMetadata) GetOpenGraphOk() (*OpenGraphMetadata, bool) {
	if o == nil || IsNil(o.OpenGraph) {
		return nil, false
	}
	return o.OpenGraph, true
}

// HasOpenGraph returns a boolean if a field has been set.
func (o *BookmarkMetadata) HasOpenGraph() bool {
	if o != nil && !IsNil(o.OpenGraph) {
		return true
	}

	return false
}

// SetOpenGraph gets a reference to the given OpenGraphMetadata and assigns it to the OpenGraph field.
func (o *BookmarkMetadata) SetOpenGraph(v OpenGraphMetadata) {
	o.OpenGraph = &v
}

// GetWordCount returns the WordCount field value if set, zero value otherwise.
func (o *BookmarkMetadata) GetWordCount() int32 {
	if o == nil || IsNil(o.WordCount) {
		var ret int32
		return ret
	}
	return *o.WordCount
}

// GetWordCountOk returns a tuple with the WordCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookmarkMetadata) GetWordCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WordCount) {
		return nil, false
	}
	return o.WordCount, true
}

// HasWordCount returns a boolean if a field has been set.
func (o *BookmarkMetadata) HasWordCount() bool {
	if o != nil && !IsNil(o.WordCount) {
		return true
	}

	return false
}

// SetWordCount gets a reference to the given int32 and assigns it to the WordCount field.
func (o *BookmarkMetadata) SetWordCount(v int32) {
	o.WordCount = &v
}

// GetReadingTime returns the ReadingTime field value if set, zero value otherwise.
func (o *BookmarkMetadata) GetReadingTime() int32 {
	if o == nil || IsNil(o.ReadingTime) {
		var ret int32
		return ret
	}
	return *o.ReadingTime
}

// GetReadingTimeOk returns a tuple with the ReadingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookmarkMetadata) GetReadingTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadingTime) {
		return nil, false
	}
	return o.ReadingTime, true
}

// HasReadingTime returns a boolean if a field has been set.
func (o *BookmarkMetadata) HasReadingTime() bool {
	if o != nil && !IsNil(o.ReadingTime) {
		return true
	}

	return false
}

// SetReadingTime gets a reference to the given int32 and assigns it to the ReadingTime field.
func (o *BookmarkMetadata) SetReadingTime(v int32) {
	o.ReadingTime = &v
}

func (o BookmarkMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookmarkMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenGraph) {
		toSerialize["openGraph"] = o.OpenGraph
	}
	if !IsNil(o.WordCount) {
		toSerialize["wordCount"] = o.WordCount
	}
	if !IsNil(o.ReadingTime) {
		toSerialize["readingTime"] = o.ReadingTime
	}
	return toSerialize, nil
}

type NullableBookmarkMetadata struct {
	value *BookmarkMetadata
	isSet bool
}

func (v NullableBookmarkMetadata) Get() *BookmarkMetadata {
	return v.value
}

func (v *NullableBookmarkMetadata) Set(val *BookmarkMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableBookmarkMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableBookmarkMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookmarkMetadata(val *BookmarkMetadata) *NullableBookmarkMetadata {
	return &NullableBookmarkMetadata{value: val, isSet: true}
}

func (v NullableBookmarkMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookmarkMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


