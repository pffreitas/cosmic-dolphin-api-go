/*
Cosmic Dolphin

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cosmicdolphinapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BookmarkLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookmarkLink{}

// BookmarkLink struct for BookmarkLink
type BookmarkLink struct {
	Url string `json:"url"`
	Relevance string `json:"relevance"`
}

type _BookmarkLink BookmarkLink

// NewBookmarkLink instantiates a new BookmarkLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookmarkLink(url string, relevance string) *BookmarkLink {
	this := BookmarkLink{}
	this.Url = url
	this.Relevance = relevance
	return &this
}

// NewBookmarkLinkWithDefaults instantiates a new BookmarkLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookmarkLinkWithDefaults() *BookmarkLink {
	this := BookmarkLink{}
	return &this
}

// GetUrl returns the Url field value
func (o *BookmarkLink) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *BookmarkLink) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *BookmarkLink) SetUrl(v string) {
	o.Url = v
}

// GetRelevance returns the Relevance field value
func (o *BookmarkLink) GetRelevance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Relevance
}

// GetRelevanceOk returns a tuple with the Relevance field value
// and a boolean to check if the value has been set.
func (o *BookmarkLink) GetRelevanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Relevance, true
}

// SetRelevance sets field value
func (o *BookmarkLink) SetRelevance(v string) {
	o.Relevance = v
}

func (o BookmarkLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookmarkLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["relevance"] = o.Relevance
	return toSerialize, nil
}

func (o *BookmarkLink) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"relevance",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBookmarkLink := _BookmarkLink{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBookmarkLink)

	if err != nil {
		return err
	}

	*o = BookmarkLink(varBookmarkLink)

	return err
}

type NullableBookmarkLink struct {
	value *BookmarkLink
	isSet bool
}

func (v NullableBookmarkLink) Get() *BookmarkLink {
	return v.value
}

func (v *NullableBookmarkLink) Set(val *BookmarkLink) {
	v.value = val
	v.isSet = true
}

func (v NullableBookmarkLink) IsSet() bool {
	return v.isSet
}

func (v *NullableBookmarkLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookmarkLink(val *BookmarkLink) *NullableBookmarkLink {
	return &NullableBookmarkLink{value: val, isSet: true}
}

func (v NullableBookmarkLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookmarkLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


