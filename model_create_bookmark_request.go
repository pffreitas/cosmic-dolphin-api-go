/*
Cosmic Dolphin

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cosmicdolphinapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateBookmarkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBookmarkRequest{}

// CreateBookmarkRequest struct for CreateBookmarkRequest
type CreateBookmarkRequest struct {
	// The source URL to bookmark
	SourceUrl string `json:"source_url"`
	// Optional collection ID to add the bookmark to
	CollectionId *string `json:"collection_id,omitempty"`
}

type _CreateBookmarkRequest CreateBookmarkRequest

// NewCreateBookmarkRequest instantiates a new CreateBookmarkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBookmarkRequest(sourceUrl string) *CreateBookmarkRequest {
	this := CreateBookmarkRequest{}
	this.SourceUrl = sourceUrl
	return &this
}

// NewCreateBookmarkRequestWithDefaults instantiates a new CreateBookmarkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBookmarkRequestWithDefaults() *CreateBookmarkRequest {
	this := CreateBookmarkRequest{}
	return &this
}

// GetSourceUrl returns the SourceUrl field value
func (o *CreateBookmarkRequest) GetSourceUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceUrl
}

// GetSourceUrlOk returns a tuple with the SourceUrl field value
// and a boolean to check if the value has been set.
func (o *CreateBookmarkRequest) GetSourceUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceUrl, true
}

// SetSourceUrl sets field value
func (o *CreateBookmarkRequest) SetSourceUrl(v string) {
	o.SourceUrl = v
}

// GetCollectionId returns the CollectionId field value if set, zero value otherwise.
func (o *CreateBookmarkRequest) GetCollectionId() string {
	if o == nil || IsNil(o.CollectionId) {
		var ret string
		return ret
	}
	return *o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookmarkRequest) GetCollectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CollectionId) {
		return nil, false
	}
	return o.CollectionId, true
}

// HasCollectionId returns a boolean if a field has been set.
func (o *CreateBookmarkRequest) HasCollectionId() bool {
	if o != nil && !IsNil(o.CollectionId) {
		return true
	}

	return false
}

// SetCollectionId gets a reference to the given string and assigns it to the CollectionId field.
func (o *CreateBookmarkRequest) SetCollectionId(v string) {
	o.CollectionId = &v
}

func (o CreateBookmarkRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBookmarkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source_url"] = o.SourceUrl
	if !IsNil(o.CollectionId) {
		toSerialize["collection_id"] = o.CollectionId
	}
	return toSerialize, nil
}

func (o *CreateBookmarkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBookmarkRequest := _CreateBookmarkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBookmarkRequest)

	if err != nil {
		return err
	}

	*o = CreateBookmarkRequest(varCreateBookmarkRequest)

	return err
}

type NullableCreateBookmarkRequest struct {
	value *CreateBookmarkRequest
	isSet bool
}

func (v NullableCreateBookmarkRequest) Get() *CreateBookmarkRequest {
	return v.value
}

func (v *NullableCreateBookmarkRequest) Set(val *CreateBookmarkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBookmarkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBookmarkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBookmarkRequest(val *CreateBookmarkRequest) *NullableCreateBookmarkRequest {
	return &NullableCreateBookmarkRequest{value: val, isSet: true}
}

func (v NullableCreateBookmarkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBookmarkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


